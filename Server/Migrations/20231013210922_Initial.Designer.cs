// <auto-generated />
using System;
using BetterBeatSaber.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BetterBeatSaber.Server.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20231013210922_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BetterBeatSaber.Server.Models.Ban", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<ulong?>("BeatSaverId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("DiscordId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("SteamId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Bans");
                });

            modelBuilder.Entity("BetterBeatSaber.Server.Models.Player", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BeatLeaderCountry")
                        .HasColumnType("longtext");

                    b.Property<uint?>("BeatLeaderCountryRank")
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("BeatLeaderGlobalRank")
                        .HasColumnType("int unsigned");

                    b.Property<double?>("BeatLeaderPp")
                        .HasColumnType("double");

                    b.Property<ushort>("Flags")
                        .HasColumnType("smallint unsigned");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("ScoreSaberCountry")
                        .HasColumnType("longtext");

                    b.Property<uint?>("ScoreSaberCountryRank")
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("ScoreSaberGlobalRank")
                        .HasColumnType("int unsigned");

                    b.Property<double?>("ScoreSaberPp")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BetterBeatSaber.Server.Models.PlayerIntegration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("AccessToken")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong>("PlayerId")
                        .HasColumnType("bigint unsigned");

                    b.Property<byte[]>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerIntegrations");
                });

            modelBuilder.Entity("BetterBeatSaber.Server.Models.PlayerRelationship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong>("FirstPlayerId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("RelationshipType")
                        .HasColumnType("int");

                    b.Property<ulong>("SecondPlayerId")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FirstPlayerId");

                    b.HasIndex("SecondPlayerId");

                    b.ToTable("PlayerRelationships");
                });

            modelBuilder.Entity("BetterBeatSaber.Server.Models.PlayerIntegration", b =>
                {
                    b.HasOne("BetterBeatSaber.Server.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("BetterBeatSaber.Server.Models.PlayerRelationship", b =>
                {
                    b.HasOne("BetterBeatSaber.Server.Models.Player", "FirstPlayer")
                        .WithMany()
                        .HasForeignKey("FirstPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BetterBeatSaber.Server.Models.Player", "SecondPlayer")
                        .WithMany()
                        .HasForeignKey("SecondPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FirstPlayer");

                    b.Navigation("SecondPlayer");
                });
#pragma warning restore 612, 618
        }
    }
}
